export XDG_CONFIG_HOME=$HOME/.config
VIM="nvim"

PERSONAL=$XDG_CONFIG_HOME/personal
source $PERSONAL/env
for i in `find -L $PERSONAL`; do
    source $i
done

source /Users/blagojpetrovoffice/.local/usr/share/doc/fzf/examples/key-bindings.zsh
source /Users/blagojpetrovoffice/.local/usr/share/doc/fzf/examples/completion.zsh

export NRDP="$HOME/work/nrdp"
export NRDP_BUILDS="$HOME/work/builds"
export PYTHONBREAKPOINT="pudb.set_trace"
export GOPATH=$HOME/go
export DARWINS_DIR="$HOME/work/darwins"
export TVUI="$HOME/work/tvui"
export API_TOOLS=$HOME/work/tools/edge/scripts
export GIT_EDITOR=$VIM
export EOSIO_INSTALL_DIR=$HOME/personal/eos
export NF_IDFILE=$HOME/.idfile
export DENO_INSTALL="$HOME/.deno"
export N_PREFIX="$HOME/.local/n"
export DOTFILES=$HOME/.dotfiles
export BOGART=$HOME/work/bogart
export NVM_DIR="$HOME/.config/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

addToPathFront $HOME/.local/.npm-global/bin
addToPathFront $HOME/.local/n/bin/
addToPathFront $HOME/.local/bin/
addToPathFront $HOME/.local/go/bin
addToPathFront $HOME/go/bin

# Where should I put you?
bindkey -s ^f "tmux-sessionizer\n"

catr() {
    tail -n "+$1" $3 | head -n "$(($2 - $1 + 1))"
}

validateYaml() {
    python -c 'import yaml,sys;yaml.safe_load(sys.stdin)' < $1
}

goWork() {
    cp ~/.npm_work_rc ~/.npmrc
}

goPersonal() {
    cp ~/.npm_personal_rc ~/.npmrc
}

addThrottle() {
    local kbs="kbps"
    echo $kbs
    echo "About to throttle to $1 $kbs"
    echo "sudo tc qdisc add dev wlp59s0 handle 1: root htb default 11"
    echo "sudo tc class add dev wlp59s0 parent 1: classid 1:1 htb rate $1$kbs"
    echo "sudo tc class add dev wlp59s0 parent 1:1 classid 1:11 htb rate $1$kbs"
    sudo tc qdisc add dev wlp59s0 handle 1: root htb default 11
    sudo tc class add dev wlp59s0 parent 1: classid 1:1 htb rate $1$kbs
    sudo tc class add dev wlp59s0 parent 1:1 classid 1:11 htb rate $1$kbs
}

removeThrottle() {
    sudo tc qdisc del dev wlp59s0 root
}

cat1Line() {
    cat $1 | tr -d "\n"
}

ioloop() {
    FIFO=$(mktemp -u /tmp/ioloop_$$_XXXXXX ) &&
    trap "rm -f $FIFO" EXIT &&
    mkfifo $FIFO &&
    ( : <$FIFO & ) &&    # avoid deadlock on opening pipe
    exec >$FIFO <$FIFO
}

eslintify() {
    cat $1 > /tmp/file_to_eslint
    npx eslint
}

# xmodmap -e "clear lock" #disable caps lock switch
# xmodmap -e "keysym Caps_Lock = Escape" #set caps_lock as escape
export PATH="/opt/homebrew/bin:$PATH"
export PATH="/opt/homebrew/sbin:$PATH"
export NVM_DIR="$HOME/.nvm"
  [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
export PATH="/opt/homebrew/opt/jpeg/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/jpeg/lib"
export CPPFLAGS="-I/opt/homebrew/opt/jpeg/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/jpeg/lib/pkgconfig"
if type brew &>/dev/null
then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

  autoload -Uz compinit
  compinit
fi

alias notes='NVIM_APPNAME=nvim-obsidian nvim ~/vaults/work/Home.md'
alias notes-p='NVIM_APPNAME=nvim-obsidian nvim ~/vaults/personal'
